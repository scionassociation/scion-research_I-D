



PANRG                                                         K. Meynell
Internet-Draft                                         SCION Association
Intended status: Informational                           J. García Pardo
Expires: 20 January 2025                                      T. Zäschke
                                                              ETH Zürich
                                                           N. Rustignoli
                                                       SCION Association
                                                            19 July 2024


                        SCION Research Questions
          draft-meynell-panrg-scion-research-questions-latest

Abstract

   TODO Abstract here

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://scionassociation.github.io/scion-research_I-D/draft-meynell-
   panrg-scion-research-questions.html.  Status information for this
   document may be found at https://datatracker.ietf.org/doc/draft-
   meynell-panrg-scion-research-questions/.

   Discussion of this document takes place on the WG Working Group
   mailing list (mailto:panrg@irtf.org), which is archived at
   https://datatracker.ietf.org/rg/panrg.  Subscribe at
   https://www.ietf.org/mailman/listinfo/panrg/.

   Source for this draft and an issue tracker can be found at
   https://github.com/scionassociation/scion-research_I-D.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 20 January 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Discovery, Distribution, and Trustworthiness of Path Properties
     3.1.  ISD, AS identity
     3.2.  Segment Dissemination
     3.3.  Routing Policies and Traffic Engineering
     3.4.  DRKey
     3.5.  SCMP Authentication
     3.6.  Proof of transit
     3.7.  NAT
   4.  Dataplane stability
     4.1.  Link load balancing
     4.2.  Reverse Path Refreshment
   5.  Hummingbird / QoS
   6.  Interfaces for Path Awareness
   7.  Implications of Path Awareness for the Transport and
           Application Layers
   8.  Naming
   9.  Alternative Algorithms
     9.1.  2-Phase Core Beaconing
       9.1.1.  Overview
       9.1.2.  Phase 1 - Discovery
       9.1.3.  Phase 2 - Segment construction
       9.1.4.  Advantages
       9.1.5.  Open questions
   10. Security Considerations
   11. IANA Considerations
   12. References
     12.1.  Normative References
     12.2.  Informative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

   SCION is an inter-domain network architecture.  Its core components
   specification, as deployed by some of its early adopters, is outlined
   in [I-D.scion-dataplane], [I-D.scion-cppki], [I-D.scion-cp],
   currently under ISE review.

   The goal of this draft is to explore how SCION and its early
   deployments try to address open research questions in [RFC9217].
   Specifically, there are still many open areas of research around
   path-aware networking, where SCION with its early deployment
   experiences and research efforts can provide a contribution.  This
   can also be a starting point for discussions around long-term
   protocol evolution.

   This draft assumes the reader is familiar with some of the
   fundamental concepts defined in the components specification.

   *Note:* This is the very first version of the SCION research
   questions draft, and it merely contains a skeleton of potential
   topics to be further discussed in this draft.  Any feedback is
   welcome and much appreciated.  Thanks!

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Discovery, Distribution, and Trustworthiness of Path Properties

3.1.  ISD, AS identity

   *  How many ASes do we expect in the SCION network model?

   *  How many ISDs?  What is the ontology of an ISD?  Per geographic
      area only?

   *  One AS belongs to many ISDs?

3.2.  Segment Dissemination

   Control servers return a large number of path segments.  This can
   cost considerable bandwidth / network egress while at the same time
   overloading clients with an unnecessarily large numbers of segments,
   mostly consisting of redundant information in terms of duplicate link
   and hops.

   *  This problem may be more problematic in ASes with many end hosts
      (e.g.  IoT), or end hosts with little computing power or little
      spare bandwidth.

   *  Getting a full path to a remote endhost may require three round-
      trips with the control server.

   There are multiple possible and independent solution steps here:

   *  Compression (idea suggested by Francois Wirz): Segments could be
      stored in a way that duplicate information (hops & links) is only
      stored once and the segments contain only references to the hops
      and links.

   *  Allow queries from start AS to end AS across multiple segments.
      This should be very easy to implement and would be compatible with
      the current wire protocol (protobuf).

      -  This would reduce the number of round trips to one.

      -  It would reduce the number of returned segments because only
         segments that actually connect to other segments would need to
         be returned.

   *  Predefine some policies that can be resolved by the control
      server, e.g.  ANY, BEST_LATENCY, BEST_BANDWIDTH, BEST_PRICE,
      BEST_CO2.  For these, a control server could simply calculate 5-10
      good paths and return these.  Moreover these could be cached for
      commonly requested remote ASs.  If a user requires a custom policy
      they can still resort to requesting actual segments.

   Doing path computation on the control server will initially increase
   computational cost.  However, it would substantially decrease network
   egress.  Caching of paths should reduce CPU cost, maybe even below
   the current cost for retrieving a large amount of segments from the
   local database and sending them over the network interface.

   Examples for requesting CORE segments between different ISDs or
   within an ISD (as of 2024-07-12):

               +==========+===========+===================+
               |      src |       dst | segments returned |
               +==========+===========+===================+
               | 64-0:0:0 |  64-0:0:0 |        337        |
               +----------+-----------+-------------------+
               | 64-0:0:0 |  65-0:0:0 |        240        |
               +----------+-----------+-------------------+
               | 64-0:0:0 |  67-0:0:0 |         60        |
               +----------+-----------+-------------------+
               | 64-0:0:0 | 64-2:0:13 |         60        |
               +----------+-----------+-------------------+

                   Table 1: CORE segment count examples

3.3.  Routing Policies and Traffic Engineering

   Reduced adoption due to limited routing policy possibilities, such as
   a (core-)AS does not want to accept transit traffic unless it starts/
   ends in ASs with special properties.  For example a GEANT AS does not
   want to allow transit traffic unless it originates or ends in another
   research AS.

   One solution could be to add a “confirm full path”-flag to certain
   segments.  If this flag is set, the full path (all segments) needs to
   authorized by all ASes that insist on authorizing it.  This is
   obviously less scalable but may be viable for ASes that insist on
   such policies.  This also allows for “secret” policies.

   Collateral: this probably needs a data plane change.  Conceptually,
   we have only a single resulting segment, and that segment needs to be
   used in full, e.g. no on-path trickery.

3.4.  DRKey

   *  Is forward-secrecy DRKey useful and should we develop it?

   *  What are the properties of the control-plane?

      -  Do we want to have any authorization of the data-plane transit
         undertaken at this stage?

      -  Would this obsolete firewalls?

      -  What do we mean when we say "authorize transit"?

   For more info: [I-D.garciapardo-drkey].

3.5.  SCMP Authentication

3.6.  Proof of transit

   FABRID [KRAHENBUHL2023] and EPIC [LEGNER2020].

3.7.  NAT

   At this moment, the SCION implementation is not compatible out-of-
   the-box with NAT'ed devices, regardless of whether these devices are
   end-hosts, or even running SCION services.  This is due to the (UDP-
   IP) underlay being modified by the NAT mechanism, but not the
   internal destination SCION address.  Although this does not concern
   the SCION protocols themselves, we want to check that this will not
   be a problem.  Critically, the SCION header needs to contain the SRC
   address as seen by the border router so that the border router can
   forward incoming response packets to the correct NAT device and port.

   Possible solutions:

   *  With IPv6 underlay, this problem disappears. // TODO Clarify why
      it disappears?  IS the idea that we can remove NATs if everyone
      would use IPv6?

   *  Introduce a mechanism so that the SCION border router can report
      the NATed address to an endhost (similar to a STUN server).

4.  Dataplane stability

4.1.  Link load balancing

   Links may get overloaded because the SCION routing system fails to
   distribute load properly over different links.  New/different links
   might be underutilized.

   If links become overloaded, there are several ways to handle that.
   Non comprehensively:

   *  Squeeze: send an SCMP message to trigger end-hosts to use an
      alternative path

   *  Steer: send and SCMP to trigger users to ask CS for a better path

   *  Reduce: hand over very short lived paths, let the end-hosts wait
      for the path to expire so that they request new paths and
      (hopefully) decide on a different path.

   *  Recommend: let the end-hosts know which paths are recommended by
      the AS at this time.

   If a link has good properties, many AS will disseminate segments,
   therefore paths that go through this link and the link may become
   overloaded.  See Simon Scherrer's work on Braess Paradox.

   Either there needs to be some constant control by all clients to not
   choose the best theoretical path, but the one that works best.  Or we
   need to find a way that control servers do not disseminate “good”
   links to all end-hosts.

   The current consensus is that end-hosts can use multi-pathing and
   “automatically” converge on the best path, i.e. creating an
   equilibrium.  Again, see Simon Scherrer's work on Braess Paradox.

4.2.  Reverse Path Refreshment

   When a client contacts a server, it is usually understood that it
   wants the server to use the reverse path to answer back.  It the
   server uses that path for a long period of time, the path will
   eventually expire.  How to standardize the process of refreshment?

   *  The server must ask the CS for a path, regardless of the client's
      policy.

   *  The client (somehow) sends a new packet with a new path, prompting
      the server to use this path from now on.

   There are some nuances: Usually the server's API will store the
   initial address of the client to be used through all the session.  We
   might need to take this into account.

   A related question: how long before expiration should we still use a
   path?  How do we handle that?

   Do we actually need to solve this reverse path refresh problem?

   *  CONTRA: It is probably rare that a server needs to send data for a
      long time without the application layer protocol requiring the
      client to ever answer back.

   *  PRO: The client may happen to have an old-ish path.  If we can't
      refresh, the client always needs to consider whether a path is
      valid "long enough", which might only be possible to guess.

   *  CONTRA: Sending keep-alives sounds like a connection based
      protocol.  It alo means we need to figure out when to stop sending
      keep alives.

   *  CONTRA: It may be better to solve this in the application layer or
      in the overlay protocol, where we we know more about potential
      length of the session, or whether this is a singular request/
      answer type of exchange, or whether more frequent keep-alives are
      anyway required.

5.  Hummingbird / QoS

   *  How many QoS flows to support at core routers?

   *  How does QoS interact with Net Neutrality?

   *  What proof of transit (or forwarding failure detection) is needed
      or wanted?

   *  What time synchronization precision should we expect at the border
      router level of every AS?  How far can we go realistically?

6.  Interfaces for Path Awareness

   *  IPv6 in the Data Plane

   *  SCION-IP translation

   *  How can we interface with QUIC Multipath
      [I-D.ietf-quic-multipath]?

7.  Implications of Path Awareness for the Transport and Application
    Layers

   To be discussed

8.  Naming

   To be discussed

9.  Alternative Algorithms

9.1.  2-Phase Core Beaconing

9.1.1.  Overview

   (based on ideas from J. van Bommel, S.  Tabaeiaghdaei, T.  Zäschke)

   2-phase core beaconing is an idea for an alternative core beaconing
   algorithm that may mitigate or answer several of the questions in
   this document. 2-phase beaconing works in two phases:

   *  First phase: use a simple, scalable algorithm to discover the
      complete network so that every AS can build a local graph that
      represents the whole topology

   *  Second phase: Every AS analyses the graph, indetifies desirable
      core segments and sends these segment out to all ASes for signing
      the segments.

   Once the segments have been signed, they can be used as usual.  The
   topology graph will be updated incrementally as new link lists
   arrive.  An AS can request a core segments to be signed at any time.
   ASes can refuse to sign a segment but must comunicate such refusal.

9.1.2.  Phase 1 - Discovery

   *  At a regular intervall "tLL" (tLL=time-link-list; eg. 10 seconds),
      every AS sends out a list of its links to all neighboring ASes.

   *  Every AS forwards all received link lists to all neighboring ASes
      unless it has seen the same link list recently (less 1/2 * tLL
      ago).

   *  Every AS will thus receive link lists from all other ASes.  It
      uses the information to build a complete graph of the internet
      topology.

   This approach should scale well.  Memory in control servers is O(AS
   count) to prevent forwardin the same linked list multiple times.  The
   message complexity is at most one linked list per originating AS per
   link, i.e. O(AS count) per link.

9.1.3.  Phase 2 - Segment construction

   An AS analyses the local representation of the network topology and
   identifies desirable core segments.  It prepares the segments and
   sends them out to all participating ASes for them to sign it.  This
   works analogous to PCBs in the current beaconing approach except that
   the segments need to be returned to the originator once the last AS
   has signed it.  Any AS can refuse to sign the segment if it doesn't
   like it but should communicate the fact, and possibly a reason, to
   the originator.

   The AS can requests segments to be signed at any time, including on-
   demand when an endpoint has special path requirements.

9.1.4.  Advantages

   Conceptually:

   *  More trust separation #1: Any AS can request any segments that it
      desires, it is not dependend on what its neighbors consider "best"
      PCBs

   *  More trust separation #2: Every AS sees the complete segment when
      signing it.  It doesn´t have to rely on downstream ASes to extends
      the segment in a matter suits its own policy.

   Concretely:

   *  Mitigates Section 3.2 for core segments in the local ISD: ?

   *  Mitigates Section 3.3 #1 preventing transit traffic: In a scenario
      where an ISD accepts inbound and ourpund traffic, but no transit
      trafic, ASes of the ISD can simply refuse to sign the segment if
      it does not begin or end inside the ISD.

   *  Mitigates Section 3.3 #2 ensure full segment usage: In a scenario
      where an two ASes are concerned that ASes between them may use a
      partial segment to send traffic into the end ASes, the SCION
      protocol could be extended such that CORE segments have their
      length XORed in the war paths.  This would prevent core segments
      from being shortened or partially used and would thus prevent on-
      path ASes from using such a segment.

   *  Mitigates Section 4.1: The link list that is sent out frequently
      could have attached some information about current link "load" or
      other quality measurements.  Any AS can then decide whether or how
      often it should disseminate the segment to endpoints.  (Fine
      point: this requires the metadata to be forwarded frequently to
      non-core ASes).  By reducing the probability of a segment to
      handed out, an AS can effectively do load balancing.

   *  Mitigates "Beacon Forwarding Policy" implications: The local
      network topology and the possibility to request any number of
      paths ansures that even that any segment that is potentially
      available on the network is also available to endpoints, even for
      massive multipathing and obscure path policies.

   *  Mitigates "wormhole attack": This is a weak mitigation.  An AS can
      send out a segment for signing and measure the time until it comes
      back.  This time can give a good indication of the actual latency
      to the most remote AS.  If the measured latency is much higher
      than the advertised latency, then the segment is probably faulty
      and should not be used.

   *  (Core-)Segment revocation is straight forward.  One of the two
      link owners simply removes the revoked link from the link list
      before sending it out.  Any AS that receives the link list should
      remove the link from its local graph and remove associated
      segments from the local segment store.

9.1.5.  Open questions

   *  How to communicate the reason for path rejection?  I.e. is a small
      change to the route sufficient to proceed with signing?

   *  How to best best select a new core segment if a requested segment
      turns out to be faulty (signalled as faulty, or because the
      signing time was suspiciously long)

10.  Security Considerations

   TODO Security

11.  IANA Considerations

   This document has no IANA actions.

12.  References

12.1.  Normative References

   [I-D.ietf-quic-multipath]
              Liu, Y., Ma, Y., De Coninck, Q., Bonaventure, O., Huitema,
              C., and M. Kühlewind, "Multipath Extension for QUIC", Work
              in Progress, Internet-Draft, draft-ietf-quic-multipath-10,
              8 July 2024, <https://datatracker.ietf.org/doc/html/draft-
              ietf-quic-multipath-10>.

   [I-D.scion-cp]
              de Kater, C., Rustignoli, N., and S. Hitz, "SCION Control
              Plane", 2023, <https://datatracker.ietf.org/doc/draft-
              dekater-scion-controlplane/>.

   [I-D.scion-cppki]
              de Kater, C., Rustignoli, N., and S. Hitz, "SCION Control-
              Plane PKI", 2023, <https://datatracker.ietf.org/doc/draft-
              dekater-scion-pki/>.

   [I-D.scion-dataplane]
              de Kater, C., Rustignoli, N., and S. Hitz, "SCION Data
              Plane", 2023, <https://datatracker.ietf.org/doc/draft-
              dekater-scion-dataplane/>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9217]  Trammell, B., "Current Open Questions in Path-Aware
              Networking", RFC 9217, DOI 10.17487/RFC9217, March 2022,
              <https://www.rfc-editor.org/rfc/rfc9217>.

12.2.  Informative References

   [I-D.garciapardo-drkey]
              Pardo, J., Krähenbühl, C., Rothenberger, B., and A.
              Perrig, "Dynamically Recreatable Keys", 2022,
              <https://datatracker.ietf.org/doc/draft-garciapardo-panrg-
              drkey/>.

   [KRAHENBUHL2023]
              Krähenbühl, C., Wyss, M., Basin, D., Lenders, V., Perrig,
              A., and M. Strohmeier, "FABRID: Flexible Attestation-Based
              Routing for Inter-Domain Networks", 2020,
              <https://www.usenix.org/conference/usenixsecurity23/
              presentation/krahenbuhl>.

   [LEGNER2020]
              Legner, M., Klenze, T., Wyss, M., Sprenger, C., and A.
              Perrig, "EPIC: Every Packet Is Checked in the Data Plane
              of a Path-Aware Internet", 2020,
              <https://netsec.ethz.ch/publications/papers/
              Legner_Usenix2020_EPIC.pdf>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Kevin Meynell
   SCION Association
   Email: kme@scion.org


   Juan A. García Pardo Giménez de los Galanes
   ETH Zürich
   Email: juan.garcia@inf.ethz.ch


   Tilmann Zäschke
   ETH Zürich
   Email: tilmann.zaeschke@inf.ethz.ch


   Nicola Rustignoli
   SCION Association
   Email: nic@scion.org
